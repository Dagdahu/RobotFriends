{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/Searchbox/Searchbox.js","components/Scroll/Scroll.js","components/ErrorBoundary/ErrorBoundary.js","components/Header/Header.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","props","_props$robot","robot","id","name","email","react_default","a","createElement","className","src","alt","CardList","_ref","robots","map","components_Card_Card","key","Searchbox","_this","this","type","placeholder","onChange","e","onSearchChange","target","value","React","Component","Scroll","children","ErrorBoundry","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Header","PureComponent","App","onRequestRobots","_this$props","searchField","pending","console","log","filteredRobots","filter","toLowerCase","includes","style","height","components_Header_Header","components_Searchbox_Searchbox","length","components_Scroll_Scroll","ErrorBoundary","components_CardList_CardList","connect","searchRobots","getRobots","dispatch","newSearchValue","payload","fetch","then","response","json","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","searchRobotsState","getRobotsState","rootReducer","combineReducers","arguments","undefined","action","assign","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","concat","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.846f1ff4.chunk.js","sourcesContent":["import React from 'react';\n\nconst robohashURL = 'https://robohash.org/';\nconst robotSize = '?size=250x250';\n\nconst Card = (props) => {\n    const {id, name, email} = props.robot;\n    return (\n        <div className='tc ba bw1 br4 b--gray bg-light-gray ma2 grow dib'>\n            <img src={robohashURL + id + robotSize} alt='' />\n            <h3 className='dark-blue overflow-y-auto'>\n                {name}\n            </h3>\n            <p>\n                {email}\n            </p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../Card/Card';\n\nconst CardList = ({robots}) => {\n    /// Map over the robots, and for each, create a Card\n    return(\n        <div className='tc'>\n            {robots.map(robot => <Card key={robot.id} robot={robot} />)}\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nclass Searchbox extends React.Component {\n    render () {\n        return (\n            <div>\n                <label>\n                    Search Robots : \n                    <input\n                        className='pa2 ma3' \n                        type='text'\n                        placeholder='search'\n                        onChange={e => this.props.onSearchChange(e.target.value)}\n                    />\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default Searchbox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        <div className='overflow-y-scroll h-100'\n        >\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React from 'react';\n\nclass ErrorBoundry extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            hasError: false,\n            error:''\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({\n            hasError:true,\n            error:error\n        })\n    }\n\n    render() {\n        return this.state.hasError ?\n            <h1>\n                Oooops, an error has occured : {this.state.error}\n            </h1>\n            :\n            this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\n\nclass Header extends React.PureComponent {\n    render() {\n        return(\n            <h1 className='ma3 pa2 robotFont white f2'>\n                RoboFriends\n            </h1>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\n\n/// Components\nimport CardList from '../components/CardList/CardList';\nimport Searchbox from '../components/Searchbox/Searchbox';\nimport Scroll from '../components/Scroll/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundary/ErrorBoundary';\nimport Header from '../components/Header/Header';\n\n/// Redux\nimport {connect} from 'react-redux';\nimport {setSearchField, fetchRobots} from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.getRobots.robots,\n    pending: state.getRobots.pending,\n    error: state.getRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (newSearchValue) => dispatch(setSearchField(newSearchValue)),\n    onRequestRobots: () => dispatch(fetchRobots())\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    /// Retrieve from props thanks to redux\n    const {searchField, robots, onSearchChange, pending} = this.props;\n    /// Filter robots according to searchField\n    console.log(robots)\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <div className=\"App tc\">\n        <div className='dt w-100 bb bw1 b--white pa3 head' style={{height:'15vh'}}>\n          <div className='dtc'>\n            <Header />\n          </div>\n          <div className='dtc tr'>\n            <Searchbox onSearchChange={onSearchChange}/>\n          </div>\n        </div>\n        <div style={{height:'85vh'}}> \n          {filteredRobots.length ?\n            <Scroll>\n              <ErrorBoundry>\n                <CardList robots={filteredRobots} />\n              </ErrorBoundry>\n            </Scroll>\n            :\n              <h2 className='tc br2 bg-white gray pa2 dib'>\n                \n                {pending ? \n                  'Robots are loading...'\n                  :\n                  'No robot found'\n                }\n              </h2>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    CHANGE_SEARCHFIELD,\n    FETCH_ROBOTS_PENDING,\n    FETCH_ROBOTS_SUCCESS,\n    FETCH_ROBOTS_FAILURE\n} from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n})\n\nexport const fetchRobots = () => (dispatch) => {\n    dispatch({type: FETCH_ROBOTS_PENDING});\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(response => dispatch({\n          type: FETCH_ROBOTS_SUCCESS,\n          payload: response\n      }))\n      .catch(error => dispatch({\n          type: FETCH_ROBOTS_FAILURE,\n          payload: error\n      }))\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const FETCH_ROBOTS_PENDING = 'FETCH_ROBOTS_PENDING';\nexport const FETCH_ROBOTS_SUCCESS = 'FETCH_ROBOTS_SUCCESS';\nexport const FETCH_ROBOTS_FAILURE = 'FETCH_ROBOTS_FAILURE';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    CHANGE_SEARCHFIELD,\n    FETCH_ROBOTS_PENDING,\n    FETCH_ROBOTS_SUCCESS,\n    FETCH_ROBOTS_FAILURE\n} from './constants';\n\nconst searchRobotsState = {\n    searchField: ''\n};\n\nexport const searchRobots = (state=searchRobotsState, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCHFIELD:\n            return Object.assign({}, state, {searchField:action.payload})\n        default:\n            return state;\n    }\n}\n\n\nconst getRobotsState = {\n    pending:false,\n    robots:[],\n    error:null\n};\nexport const getRobots = (state=getRobotsState, action={}) => {\n    switch(action.type) {\n        case FETCH_ROBOTS_PENDING:\n            return Object.assign({}, state, {\n                pending:true,\n                error:null\n            })\n        case FETCH_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {\n                pending:false,\n                robots:action.payload,\n                error:null\n            })\n        case FETCH_ROBOTS_FAILURE:\n            return Object.assign({}, state, {\n                pending:false,\n                robots:[],\n                error:action.payload\n            })\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n/// Redux\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {searchRobots, getRobots} from './reducers';\nimport {logger} from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({searchRobots, getRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}